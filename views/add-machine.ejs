<% include ./partials/header %>

    <div style="padding-left: 200px; padding-top: 100px; padding-bottom: 100px;">
        <div class="ui grid centered">
            <div class="row">
                <div class="ten wide column">
                    <h1>Select Products</h1>
                        <table class="ui compact celled definition table">
                                <thead>
                                  <tr>
                                    <th></th>
                                    <th>Name</th>
                                    <th>Max Quantity</th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <tr>
                                    <td class="collapsing">
                                      <div class="ui fitted slider checkbox">
                                        <input type="checkbox"> <label></label>
                                      </div>
                                    </td>
                                    <td>Lays</td>
                                    <td>10</td>
                                  </tr>
                                  <tr>
                                    <td class="collapsing">
                                      <div class="ui fitted slider checkbox">
                                        <input type="checkbox"> <label></label>
                                      </div>
                                    </td>
                                    <td>Lays</td>
                                    <td>10</td>
                                  </tr>
                                  <tr>
                                    <td class="collapsing">
                                      <div class="ui fitted slider checkbox">
                                        <input type="checkbox"> <label></label>
                                      </div>
                                    </td>
                                    <td>Lays</td>
                                    <td>10</td>
                                  </tr>
                                </tbody>
                                <tfoot class="full-width">
                                  <tr>
                                    <th></th>
                                    <th colspan="4">
                                      <div class="ui right floated small primary labeled icon button">
                                        <i class="user icon"></i> Add Products
                                      </div>
                                    </th>
                                  </tr>
                                </tfoot>
                              </table>
                </div>
            </div>
            <div class="row">
                <div class="ten wide column">
                    <div class="pac-card" id="pac-card">
                        <div>
                            <div id="title">
                                Autocomplete search
                            </div>
                            <div id="type-selector" class="pac-controls">
                                <input type="radio" name="type" id="changetype-all" checked="checked">
                                <label for="changetype-all">All</label>

                                <input type="radio" name="type" id="changetype-establishment">
                                <label for="changetype-establishment">Establishments</label>

                                <input type="radio" name="type" id="changetype-address">
                                <label for="changetype-address">Addresses</label>

                                <input type="radio" name="type" id="changetype-geocode">
                                <label for="changetype-geocode">Geocodes</label>
                            </div>
                            <div id="strict-bounds-selector" class="pac-controls">
                                <input type="checkbox" id="use-strict-bounds" value="">
                                <label for="use-strict-bounds">Strict Bounds</label>
                            </div>
                        </div>
                        <div id="pac-container">
                            <input id="pac-input" type="text" placeholder="Enter a location">
                        </div>
                    </div>
                    <div id="map"></div>
                    <div id="infowindow-content">
                        <img src="" width="16" height="16" id="place-icon">
                        <span id="place-name" class="title"></span>
                        <br>
                        <span id="place-address"></span>
                    </div>
                    <script>
                        function initMap() {
                            var options = {
                                zoom: 8,
                                center: { lat: 28.7041, lng: 77.1025 }
                            }

                            var map = new google.maps.Map(document.getElementById('map'), options);
                            var markers = [];

                            // listen for click on map
                            google.maps.event.addListener(map, 'click', function (event) {
                                deleteMarkers();
                                addMarker({ coords: event.latLng });
                                // console.log(event.latLng.lat());
                                // console.log(event.latLng.lng());
                            });


                            //add marker function
                            function addMarker(props) {
                                props.content = 'Latitude: ' + props.coords.lat() + '<br>Longitude: ' + props.coords.lng();

                                var marker = new google.maps.Marker({
                                    position: props.coords,
                                    map: map
                                });

                                if (props.content) {
                                    var infoWindow = new google.maps.InfoWindow({
                                        content: props.content
                                    });

                                    marker.addListener('click', function () {
                                        infoWindow.open(map, marker);
                                    });
                                }

                                markers.push(marker);
                            }





                            // Sets the map on all markers in the array.
                            function setMapOnAll(map) {
                                for (var i = 0; i < markers.length; i++) {
                                    markers[i].setMap(map);
                                }
                            }

                            // Removes the markers from the map, but keeps them in the array.
                            function clearMarkers() {
                                setMapOnAll(null);
                            }

                            // Deletes all markers in the array by removing references to them.
                            function deleteMarkers() {
                                clearMarkers();
                                markers = [];
                            }


                            //search feature
                            var card = document.getElementById('pac-card');
                            var input = document.getElementById('pac-input');
                            var types = document.getElementById('type-selector');
                            var strictBounds = document.getElementById('strict-bounds-selector');

                            map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

                            var autocomplete = new google.maps.places.Autocomplete(input);

                            // Bind the map's bounds (viewport) property to the autocomplete object,
                            // so that the autocomplete requests use the current map bounds for the
                            // bounds option in the request.
                            autocomplete.bindTo('bounds', map);

                            var infowindow = new google.maps.InfoWindow();
                            var infowindowContent = document.getElementById('infowindow-content');
                            infowindow.setContent(infowindowContent);
                            var marker = new google.maps.Marker({
                                map: map,
                                anchorPoint: new google.maps.Point(0, -29)
                            });
                            markers.push(marker);
                            autocomplete.addListener('place_changed', function () {
                                infowindow.close();
                                marker.setVisible(false);
                                var place = autocomplete.getPlace();
                                if (!place.geometry) {
                                    // User entered the name of a Place that was not suggested and
                                    // pressed the Enter key, or the Place Details request failed.
                                    window.alert("No details available for input: '" + place.name + "'");
                                    return;
                                }

                                // If the place has a geometry, then present it on a map.
                                if (place.geometry.viewport) {
                                    map.fitBounds(place.geometry.viewport);
                                } else {
                                    map.setCenter(place.geometry.location);
                                    map.setZoom(17);  // Why 17? Because it looks good.
                                }
                                marker.setPosition(place.geometry.location);
                                console.log(place.geometry.location);
                                
                                marker.setVisible(true);

                                var address = '';
                                if (place.address_components) {
                                    address = [
                                        (place.address_components[0] && place.address_components[0].short_name || ''),
                                        (place.address_components[1] && place.address_components[1].short_name || ''),
                                        (place.address_components[2] && place.address_components[2].short_name || '')
                                    ].join(' ');
                                }

                                infowindowContent.children['place-icon'].src = place.icon;
                                infowindowContent.children['place-name'].textContent = place.name;
                                infowindowContent.children['place-address'].textContent = address;
                                infowindow.open(map, marker);
                            });

                            // Sets a listener on a radio button to change the filter type on Places
                            // Autocomplete.
                            function setupClickListener(id, types) {
                                var radioButton = document.getElementById(id);
                                radioButton.addEventListener('click', function () {
                                    autocomplete.setTypes(types);
                                });
                            }

                            setupClickListener('changetype-all', []);
                            setupClickListener('changetype-address', ['address']);
                            setupClickListener('changetype-establishment', ['establishment']);
                            setupClickListener('changetype-geocode', ['geocode']);

                            document.getElementById('use-strict-bounds')
                                .addEventListener('click', function () {
                                    console.log('Checkbox clicked! New state=' + this.checked);
                                    autocomplete.setOptions({ strictBounds: this.checked });
                                });
                        }


                        
                    </script>
                    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAKBq81VTTCSIbFdOP-6_5iz7mKaW4pqF8&libraries=places&callback=initMap" async
                        defer></script>
                </div>
            </div>
        </div>
    </div>

    <% include ./partials/footer %>